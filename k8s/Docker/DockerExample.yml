apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker
  name: docker
  namespace: dev-env
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker
  template:
    metadata:
      labels:
        app: docker
    spec:
      containers:
        - image: docker:latest
          name: docker
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-server-cert
              mountPath: /etc/docker/cert/server
            - name: home-dir
              mountPath: /home/user
            - name: docker-data
              mountPath: /var/lib/docker
      volumes:
        - name: docker-server-cert
          secret:
            secretName: docker-server-cert
            defaultMode: 0444
            items:
              - key: ca.pem
                path: ca.pem
              - key: server-key.pem
                path: server-key.pem
              - key: server-cert.pem
                path: server-cert.pem
        - name: home-dir
          persistentVolumeClaim:
            claimName: home-dir
        - name: docker-data
          persistentVolumeClaim:
            claimName: docker-data
      imagePullSecrets:
        - name: my-registry
---
apiVersion: v1
kind: Service
metadata:
  name: docker
  namespace: dev-env
spec:
  ports:
    - name: docker-socket
      port: 2357
      targetPort: 2357
    # - name: expose-your-docker-service
    #   port: 8000
    #   targetPort: 8000
  selector:
    app: docker
  # type: LoadBalancer
  type: ClusterIP
