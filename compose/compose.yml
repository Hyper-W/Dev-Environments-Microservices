services:
  dind:
    build:
      context: ./dind
      args:
        USER: ${USER:-user} # Your User Name
        USER_ID: ${USER_ID:-1000} # Your User ID
        GROUP_ID: ${GROUP_ID:-1000} # Your GROUP ID
    container_name: dind
    image: dind
    volumes:
      - type: volume
        source: docker-socket
        target: /var/run
      - type: volume
        source: home-dir
        target: /home/${USER:-user}
      - type: volume
        source: docker-data
        target: /var/lib/docker
    privileged: true
    restart: always

  ssh:
    build:
      context: ./ssh
      args:
        USER: ${USER:-user} # Your User Name
        USER_ID: ${USER_ID:-1000} # Your User ID
        GROUP_ID: ${GROUP_ID:-1000} # Your GROUP ID
        KUBE_VERSION: ${KUBE_VERSION:-v1.28} # K8s Version
    container_name: ssh
    ports:
      - 8022:22
    image: ssh
    volumes:
      - type: volume
        source: docker-socket
        target: /var/run/dind
        read_only: true
      - type: volume
        source: home-dir
        target: /home/${USER:-user}
      - type: volume
        source: kube-config
        target: /home/${USER:-user}/.kube
      - type: volume
        source: helm-data
        target: /home/${USER:-user}/.config/helm
      - type: volume
        source: vscode-data
        target: /home/${USER:-user}/.vscode
      - type: volume
        source: vscode-server-data
        target: /home/${USER:-user}/.vscode-server
      - type: volume
        source: ssh-host-keys
        target: /etc/ssh/host-keys
      - type: volume
        source: ssh-dir
        target: /home/${USER:-user}/.ssh
    restart: always

  vscode:
    build:
      context: ./vscode
      args:
        USER: ${USER:-user} # Your User Name
        USER_ID: ${USER_ID:-1000} # Your User ID
        GROUP_ID: ${GROUP_ID:-1000} # Your GROUP ID
        KUBE_VERSION: ${KUBE_VERSION:-v1.28} # K8s Version
    container_name: vscode
    # ports:
      # - 8000:8000
    image: vscode
    volumes:
      - type: volume
        source: docker-socket
        target: /var/run/dind
        read_only: true
      - type: volume
        source: home-dir
        target: /home/${USER:-user}
      - type: volume
        source: kube-config
        target: /home/${USER:-user}/.kube
      - type: volume
        source: helm-data
        target: /home/${USER:-user}/.config/helm
      - type: volume
        source: vscode-data
        target: /home/${USER:-user}/.vscode
      - type: volume
        source: vscode-server-data
        target: /home/${USER:-user}/.vscode-server
    restart: always
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:22.0
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      KC_DB: mariadb
      KC_DB_URL_HOST: keycloak-db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: keycloak
      KEYCLOAK_ADMIN_PASSWORD: keycloak
    ports:
      - 8080:8080
    command: ["start-dev"]
    depends_on:
      - keycloak-db
    restart: always
  keycloak-db:
    container_name: keycloak-db
    image: mariadb:11
    environment:
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: keycloak
      MYSQL_ROOT_PASSWORD: keycloak
    volumes:
      - type: volume
        source: keycloak-data
        target: /var/lib/mysql
    restart: always
  oauth2-proxy:
    container_name: oauth2-proxy
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.5.1
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 4180:4180
    depends_on:
      - keycloak
    environment:
      OAUTH2_PROXY_PROVIDER: oidc
      OAUTH2_PROXY_CLIENT_ID: vscode
      OAUTH2_PROXY_CLIENT_SECRET: ag2mvcAWzh0cEeAZ8M7cZaedhWbfVsxN # From Keycloak Client Credentials
      OAUTH2_PROXY_REDIRECT_URL: 	http://host.docker.internal:4180/oauth2/callback
      OAUTH2_PROXY_OIDC_ISSUER_URL: http://host.docker.internal:8080/realms/default
      OAUTH2_PROXY_COOKIE_SECRET: a1Z9zRNzVhPYxibeSu7ZrOs_OWeS2_1Y65d9BXsYqiw= # openssl rand -base64 32 | tr -- '+/' '-_'
      OAUTH2_PROXY_COOKIE_SECURE: "false"
      OAUTH2_PROXY_COOKIE_NAME: "oauth2_proxy"
      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      OAUTH2_PROXY_HTTP_ADDRESS: 0.0.0.0:4180
      OAUTH2_PROXY_UPSTREAMS: http://vscode:8000/
      OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: "true"
      OAUTH2_PROXY_SCOPE: openid email profile
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"
      OAUTH2_PROXY_PASS_USER_HEADERS: "true"
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true"
      OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL: "true"
    restart: always  

volumes:
    docker-socket:
        name: docker-socket
        driver_opts:
          type: tmpfs
          device: tmpfs
    home-dir:
        name: home-dir
    kube-config:
        name: kube-config
    helm-data:
        name: helm-data
    docker-data:
        name: docker-data
    ssh-host-keys:
        name: ssh-host-keys
    ssh-dir:
        name: ssh-dir
    vscode-data:
        name: vscode-data
    vscode-server-data:
        name: vscode-server-data
    keycloak-data:
        name: keycloak-data